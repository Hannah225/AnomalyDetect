knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
library(viridis)
library(lubridate)
theme_set(theme_classic())
temp = list.files(pattern="results/*.csv")
fileList = lapply(temp, read.csv)
temp = list.files(path = "results/", pattern="*.csv")
fileList = lapply(temp, read.csv)
temp = list.files(path = "results", pattern="*.csv")
fileList = lapply(temp, read.csv)
temp = list.files(path = "results", pattern="*.csv")
temp = "results/"+temp
temp = list.files(path = "results", pattern="*.csv")
temp = paste0(temp, "results/", sep="")
fileList = lapply(temp, read.csv)
temp = list.files(path = "results", pattern="*.csv")
temp = paste("results/", temp, sep="")
fileList = lapply(temp, read.csv)
View(fileList)
View(fileList[[1]])
names = list.files(path = "results", pattern="*.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
View(fileList)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
library(viridis)
library(lubridate)
theme_set(theme_classic())
names = list.files(path = "results", pattern="*Results.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
View(fileList)
fileList[[1]]
test <- fileList[[1]]
View(test)
names = list.files(path = "results", pattern="*Results.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
extracted_names <- list()
for (name_split in names) {
# Extract the characters before the first "_"
extracted_name <- substr(name_split[[1]], 1, regexpr("_", name_split[[1]]) - 1)
# Add the extracted name to the list
extracted_names <- c(extracted_names, extracted_name)
}
View(extracted_names)
test <- fileList[[1]]
test <-
pivot_longer(test, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, x=Predicition, y=Value) +
geom_line(color=Measure)
ggplot(test, x=Predicition, y=Value) +
geom_line(color="Measure")
ggplot(test, x=Predicition, y=Value, color = Measure) +
geom_line()
ggplot(test, aes(x=Predicition, y=Value), color = Measure) +
geom_line()
ggplot(test, aes(x="Predicition", y="Value"), color = "Measure") +
geom_line()
ggplot(test, aes(Prediction, Value), color = Measure) +
geom_line()
ggplot(test, aes(Value, Prediction), color = Measure) +
geom_point()
ggplot(test, aes(Value, Prediction), color = Measure) +
geom_point() +
facet_grid(Measure ~ .) +
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
library(viridis)
library(lubridate)
theme_set(theme_classic())
names = list.files(path = "results", pattern="*Results.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
extracted_names <- list()
for (name_split in names) {
# Extract the characters before the first "_"
extracted_name <- substr(name_split[[1]], 1, regexpr("_", name_split[[1]]) - 1)
# Add the extracted name to the list
extracted_names <- c(extracted_names, extracted_name)
}
test <- fileList[[1]]
test <-
pivot_longer(test, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction), color = Measure) +
geom_point() +
facet_grid(Measure ~ .)
ggplot(test, aes(Value, Prediction)) +
geom_point(color = Measure) +
facet_grid(Measure ~ .)
ggplot(test, aes(Value, Prediction)) +
geom_point(color = test$Measure) +
facet_grid(Measure ~ .)
ggplot(test, aes(Value, Prediction)) +
geom_point() +
facet_grid(Measure ~ .)
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .)
i <- 0
for (file in file_list){
data = pivot_longer(test, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extraced_names[i])
name <- extraced_names[i] + "_plot"
i <- i+1
ggsave(name)
}
i <- 0
for (file in fileList){
data = pivot_longer(test, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extraced_names[i])
name <- extraced_names[i] + "_plot"
i <- i+1
ggsave(name)
}
i <- 0
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extraced_names[i])
name <- extraced_names[i] + "_plot"
i <- i+1
ggsave(name)
}
i <- 0
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[i])
name <- extracted_names[i] + "_plot"
i <- i+1
ggsave(name)
}
extracted_names[i] + "_plot"
extracted_names[i]
extracted_names[1]
extracted_names[[i]]
i <- 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
name <- extracted_names[[i]] + "_plot"
i <- i+1
ggsave(name)
}
extracted_names[[1]]
i=1
extracted_names[[i]]
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
name = extracted_names[[i]] + "_plot"
i = i+1
ggsave(name)
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
i = i+1
ggsave(paste(extracted_names[[i]], "_plot"))
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
i = i+1
ggsave(paste(extracted_names[[i]], "_plot.png"))
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(test, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
ggsave(paste(extracted_names[[i]], "_plot.png"))
i = i+1
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(file, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
ggsave(paste(extracted_names[[i]], "_plot.png"))
i = i+1
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(data, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
ggsave(paste(extracted_names[[i]], "_plot.png"))
i = i+1
}
names = list.files(path = "results", pattern="*Cohen.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
test <- fileList[[1]]
View(test)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
library(viridis)
library(lubridate)
library(corrplot)
theme_set(theme_classic())
test <- fileList[[1]]
corrplot(test, method="circle")
test <- fileList[[1]]
corrplot(test[-1], method="circle")
test <- fileList[[1]]
corrplot(test[,-1], method="circle")
test <- fileList[[1]]
corrplot(subset(test, select=-Method), method="circle")
test <- fileList[[1]]
corrplot(subset(test, select=-Method), method="circle")
subset(test, select=-Method)
test <- fileList[[1]]
plot_cov(subset(test, select=-Method))
test <- fileList[[1]]
corrplot(subset(test, select=-Method), method="circle")
test <- fileList[[1]]
corrplot(subset(test, select=-Method), method="circle", is.corr = FALSE)
data.matrix(subset(test, select=-Method))
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="circle", is.corr = FALSE)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="pie", is.corr = FALSE)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color", is.corr = FALSE)
test <- fileList[[1]]
corrplot(data.matrix(test), method="color", is.corr = FALSE)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color", is.corr = FALSE)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color", is.corr = FALSE, type="upper")
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color", is.corr = FALSE, type="upper",
tl.col="black", tl.srt=45)
data.matrix(test)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color",
is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
test <- fileList[[1]]
corrplot(data.matrix(subset(test, select=-Method)), method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
M<-cor(mtcars)
head(round(M,2))
View(M)
data.matrix(subset(test, select=-Method), rownames.force = test$Method)
try <- data.matrix(subset(test, select=-Method))
rownames(try) <- test$Method
View(try)
test <- fileList[[1]]
try <- data.matrix(subset(test, select=-Method))
rownames(try) <- test$Method
corrplot(try, method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
test <- fileList[[1]]
mat <- data.matrix(subset(test, select=-Method))
rownames(mat) <- test$Method
corrplot(mat, method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
names = list.files(path = "results", pattern="*Cohen.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
i = 1
for (file in fileList){
mat <- data.matrix(subset(file, select=-Method))
rownames(mat) <- file$Method
corrplot(mat, method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
ggsave(paste(extracted_names[[i]], "_cohenplot.png"))
i = i+1
}
names = list.files(path = "results", pattern="*Cohen.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
i = 1
for (file in fileList){
mat <- data.matrix(subset(file, select=-Method))
rownames(mat) <- file$Method
png(filename=paste(extracted_names[[i]], "_plot.png"))
corrplot(mat, method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
dev.off()
i = i+1
}
names = list.files(path = "results", pattern="*Results.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
extracted_names <- list()
for (name_split in names) {
# Extract the characters before the first "_"
extracted_name <- substr(name_split[[1]], 1, regexpr("_", name_split[[1]]) - 1)
# Add the extracted name to the list
extracted_names <- c(extracted_names, extracted_name)
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(data, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
ggsave(paste(extracted_names[[i]], "_plot.png"))
i = i+1
}
names = list.files(path = "results", pattern="*Cohen.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
i = 1
for (file in fileList){
mat <- data.matrix(subset(file, select=-Method))
rownames(mat) <- file$Method
png(filename=paste(extracted_names[[i]], "_Cohenplot.png"))
corrplot(mat, method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
dev.off()
i = i+1
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
library(viridis)
library(lubridate)
library(corrplot)
theme_set(theme_classic())
names = list.files(path = "results", pattern="*Results.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
extracted_names <- list()
for (name_split in names) {
# Extract the characters before the first "_"
extracted_name <- substr(name_split[[1]], 1, regexpr("_", name_split[[1]]) - 1)
# Add the extracted name to the list
extracted_names <- c(extracted_names, extracted_name)
}
i = 1
for (file in fileList){
data = pivot_longer(file, cols = c("F1", "Precision", "Recall"), names_to = "Measure", values_to = "Value")
ggplot(data, aes(Value, Prediction,  color = Measure)) +
geom_point() +
facet_grid(Measure ~ .) +
ggtitle(extracted_names[[i]])
ggsave(paste(extracted_names[[i]], "_plot.png"))
i = i+1
}
names = list.files(path = "results", pattern="*Cohen.csv")
path = paste("results/", names, sep="")
fileList = lapply(path, read.csv)
i = 1
for (file in fileList){
mat <- data.matrix(subset(file, select=-Method))
rownames(mat) <- file$Method
png(filename=paste(extracted_names[[i]], "_Cohenplot.png"))
corrplot(mat, method="color",
#is.corr = FALSE,
type="upper",
tl.col="black", tl.srt=45)
dev.off()
i = i+1
}
